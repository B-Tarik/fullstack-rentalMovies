{"version":3,"sources":["components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","services/logService.js","services/httpService.js","services/authService.js","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","components/common/searchBox.jsx","services/movieService.js","services/genreService.js","components/movies.jsx","utils/paginate.js","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registerForm.jsx","components/common/protectedRoute.jsx","App.js","registerServiceWorker.js","index.js"],"names":["TableHeader","raiseSort","path","sortColumn","Object","objectSpread","_this","props","order","onSort","renderSortIcon","column","react_default","a","createElement","className","_this2","this","columns","map","key","onClick","label","Component","TableBody","renderCell","item","content","_","get","createKey","_id","_this$props","data","Table","_ref","tableHeader","tableBody","Like","classes","liked","style","cursor","aria-hidden","logService","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","httpService","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","tokeynKey","_callee","email","password","regenerator_default","wrap","_context","prev","next","http","sent","localStorage","setItem","stop","getJwt","getItem","authService","login","_x","_x2","_login","apply","arguments","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","MoviesTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","movie","Link","to","concat","title","like","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","table","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","SearchBox","value","onChange","type","name","placeholder","aria-label","e","currentTarget","movieUrl","id","saveMovie","body","getGenres","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","t0","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","_this$state","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","_this$state2","_this$getPagedData","listGroup","searchBox","moviesTable","pagination","Input","rest","objectWithoutProperties","htmlFor","assign","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateProperty","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","common_input","common_select","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","movieId","match","params","mapToViewModel","_context3","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","NavLink","Fragment","LoginForm","username","location","window","from","pathname","Redirect","Logout","RegisterForm","ProtectedRoute","component","render","Route","App","componentDidMount","lib","navBar","Switch","protectedRoute","components_movies","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","BrowserRouter","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.225195bd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n// columns: array\r\n// sortColumn: object\r\n// onSort: function\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst Like = props => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!props.liked) classes += \"-o\";\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n      aria-hidden=\"true\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","// import * as Sentry from \"@sentry/browser\";\r\n\r\nfunction init() {\r\n  // Sentry.init({\r\n  //   dsn: \"https://f8c1ebef7c904ac79dba266d6bca4820@sentry.io/1391589\"\r\n  // });\r\n}\r\n\r\nfunction log(error) {\r\n  // Sentry.captureException(error);\r\n  console.error(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log\r\n};\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport logger from \"./logService\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occured.\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/auth\";\r\nconst tokeynKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n  localStorage.setItem(tokeynKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokeynKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokeynKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokeynKey);\r\n    return jwtDecode(jwt);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokeynKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"./common/table\";\r\nimport Like from \"./common/like\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: movie => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: movie => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    )\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) {\r\n      this.columns.push(this.deleteColumn);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  selectedItem,\r\n  onItemSelect\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map(item => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control mb-3\"\r\n      placeholder=\"Search...\"\r\n      aria-label=\"Search\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/movies\";\r\n\r\nfunction movieUrl(id) {\r\n  return apiEndpoint + \"/\" + id;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(id) {\r\n  return http.get(movieUrl(id));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n\r\n  return http.post(apiEndpoint, movie);\r\n}\r\n\r\nexport function deleteMovie(id) {\r\n  return http.delete(movieUrl(id));\r\n}\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport Pagination from \"./common/pagination\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { paginate } from \"../utils/paginate\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async movie => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 404) {\r\n        toast.error(\"This movie has already been deleted.\");\r\n      }\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery) {\r\n      filtered = allMovies.filter(m =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (selectedGenre && selectedGenre._id) {\r\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n    }\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn } = this.state;\r\n    const { user } = this.props;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <Link to=\"/movies/new\" className=\"btn btn-primary mb-3\">\r\n              New Movie\r\n            </Link>\r\n          )}\r\n          <p>Showing {totalCount} movies in the database.</p>\r\n          <SearchBox\r\n            value={this.state.searchQuery}\r\n            onChange={this.handleSearch}\r\n          />\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select.jsx\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const data = { ...this.state.data };\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        error={errors[name]}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        options={options}\r\n        error={errors[name]}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form.jsx\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\r\n    genres: [],\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string()\r\n      .required()\r\n      .label(\"Title\"),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\")\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 404) {\r\n        this.props.history.replace(\"/not-fount\");\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        ReactMovies\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Form from \"./common/form.jsx\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password);\r\n\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = error.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndpoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form.jsx\";\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(5)\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .label(\"Name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = error.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Movies from \"./components/movies\";\r\nimport MovieForm from \"./components/movieForm\";\r\nimport Customers from \"./components/customers\";\r\nimport Rentals from \"./components/rentals\";\r\nimport NotFound from \"./components/notFound\";\r\nimport NavBar from \"./components/navBar\";\r\nimport LoginForm from \"./components/loginForm\";\r\nimport Logout from \"./components/logout\";\r\nimport RegisterForm from \"./components/registerForm\";\r\nimport auth from \"./services/authService\";\r\nimport ProtectedRoute from \"./components/common/protectedRoute\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {};\r\n\r\n  componentDidMount = () => {\r\n    const user = auth.getCurrentUser();\r\n    this.setState({ user });\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n        <NavBar user={user} />\r\n        <main className=\"container\">\r\n          <Switch>\r\n            <Route path=\"/register\" component={RegisterForm} />\r\n            <Route path=\"/login\" component={LoginForm} />\r\n            <Route path=\"/logout\" component={Logout} />\r\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\r\n            <Route\r\n              path=\"/movies\"\r\n              render={props => <Movies {...props} user={this.state.user} />}\r\n            />\r\n            <Route path=\"/customers\" component={Customers} />\r\n            <Route path=\"/rentals\" component={Rentals} />\r\n            <Route path=\"/not-found\" component={NotFound} />\r\n            <Redirect from=\"/\" exact to=\"/movies\" />\r\n            <Redirect to=\"/not-found\" />\r\n          </Switch>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}